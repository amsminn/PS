bool check_composite(int n, int a, int d, int s) {
    x = bin_exp(a, d, n);
    if (x == 1 || x == n - 1) return false;
    
    while (--s) {
        x = (long long)x * x % n;
        if (x == n - 1) return false;
    }
    return true;
}

bool miller_rabin_test(int n) {
    if (n < 2) return false;
    
    int s = 0, d = n - 1;
    while (~d & 1) {
        d >>= 1;
        ++s;
    }
    
    for (int a : { 2, 3, 5, 7 }) {
        if (a == n) return true;
        if (check_composite(n, a, d, s)) return false;
    }
    return true;
}